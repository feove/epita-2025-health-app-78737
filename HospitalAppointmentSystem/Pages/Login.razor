@page "/login"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject IHttpClientFactory HttpClientFactory

<h3>Login</h3>

<EditForm Model="@loginUser" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="loginUser.Email" />
    </div>

    <div>
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginUser.PasswordHash" type="password" />
    </div>

    <button type="submit">Login</button>
    <p>@errorMessage</p>
</EditForm>

@code {
    private User loginUser = new User();
    private string errorMessage = string.Empty;  // Fix for nullable warning

    private async Task HandleLogin()
    {
        try
        {
            var client = HttpClientFactory.CreateClient("API");
            var response = await client.PostAsJsonAsync("api/users/login", loginUser);

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = "Login failed: " + await response.Content.ReadAsStringAsync();
                Console.WriteLine(errorMessage);
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred: " + ex.Message;
            Console.WriteLine(errorMessage);
        }
    }

    public class User
    {
        public string Email { get; set; } = string.Empty;
        public string PasswordHash { get; set; } = string.Empty;
    }
}
