@page "/schedule"
@using System.Globalization
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="calendar-container">
    <h1 class="calendar-header">Select Your Appointment</h1>

    <div class="calendar-navigation">
        <button class="nav-btn" @onclick="PreviousMonth">&#8592;</button>
        <div class="calendar-month-title">@currentMonth @currentYear</div>
        <button class="nav-btn" @onclick="NextMonth">&#8594;</button>
    </div>

    <div class="calendar">
        @foreach (var dayName in dayNames)
        {
            <div class="calendar-day-name">@dayName</div>
        }

        @foreach (var day in days)
        {
            <div class="calendar-day @(day.IsAvailable ? "available" : "unavailable") @(day.IsSelected ? "selected" : "")"
                 @onclick="() => SelectDay(day)">
                @day.Number
            </div>
        }
    </div>

    <button class="confirm-btn" @onclick="ConfirmAppointment">Confirm</button>
</div>

@code {
    private DateTime currentDate = DateTime.Now;
    private string currentMonth => currentDate.ToString("MMMM");
    private int currentYear => currentDate.Year;
    private List<string> dayNames = new() { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };
    private List<Day> days = new();

    protected override void OnInitialized()
    {
        GenerateCalendar();
    }

    private void GenerateCalendar()
    {
        days.Clear();
        int daysInMonth = DateTime.DaysInMonth(currentDate.Year, currentDate.Month);

        for (int i = 1; i <= daysInMonth; i++)
        {
            days.Add(new Day { Number = i, IsAvailable = true });
        }
    }

    private void NextMonth()
    {
        currentDate = currentDate.AddMonths(1);
        GenerateCalendar();
    }

    private void PreviousMonth()
    {
        currentDate = currentDate.AddMonths(-1);
        GenerateCalendar();
    }

    private void SelectDay(Day day)
    {
        foreach (var d in days) d.IsSelected = false;
        day.IsSelected = true;
    }

    private void ConfirmAppointment()
    {
         NavigationManager.NavigateTo("/appointments");
    }

    public class Day
    {
        public int Number { get; set; }
        public bool IsAvailable { get; set; }
        public bool IsSelected { get; set; }
    }
}
